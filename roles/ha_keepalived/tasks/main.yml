---

################################
# Install the keepalived package

- name: Install package keepalived
  ansible.builtin.package:
    name: keepalived
    state: "{{ keepalived.package.state }}"
  notify: restart-keepalived-service

######################################
# Create the script user, if necessary

- name: Create keepalived script user, {{ keepalived.script.user }}
  ansible.builtin.user:
    name: "{{ keepalived.script.user }}"
    group: "{{ keepalived.script.group }}"
    comment: "User to run keepalived scripts"
    home: "{{ keepalived.dir.lib }}"
    shell: "{{ keepalived.script.login }}"
    append: false
    create_home: false
    system: true

##################################
# Install/Update the configuration

- name: Create keepalived etc directory, {{ keepalived.dir.etc }}
  ansible.builtin.file:
    path: "{{ keepalived.dir.etc }}"
    state: directory
    owner: root
    group: root
    mode: "u=rwx,g=,o="

- name: Create keepalived lib directory, {{ keepalived.dir.lib }}
  ansible.builtin.file:
    path: "{{ keepalived.dir.lib }}"
    state: directory
    owner: "{{ keepalived.script.user }}"
    group: "{{ keepalived.script.group }}"
    mode: "u=rwx,g=,o="

# This is here for the case when someone changes the default
- name: Verify keepalived run directory exists, {{ keepalived.dir.run }}
  register: check_rundir
  ansible.builtin.stat:
    path: "{{ keepalived.dir.run }}/."  # Use '/." to traverse a symlink, if necessary
  failed_when: not (check_rundir.stat.isdir is defined and check_rundir.stat.isdir)

# This is here for the case when someone changes the default
- name: Verify keepalived tmp directory exists, {{ keepalived.dir.tmp }}
  register: check_tmpdir
  ansible.builtin.stat:
    path: "{{ keepalived.dir.tmp }}/."  # Use '/." to traverse a symlink, if necessary
  failed_when: not (check_tmpdir.stat.isdir is defined and check_tmpdir.stat.isdir)

- name: Create keepalived configuration, {{ path }}
  vars:
    path: "{{ keepalived.dir.etc }}/{{ keepalived.config.file }}"
  ansible.builtin.template:
    src: "keepalived.conf.j2"
    dest: "{{ path }}"
    owner: root
    group: root
    mode: "u=r,g=,o="
  notify: restart-keepalived-service

- name: Create keepalived k3s check script, {{ path }}
  vars:
    path: "{{ keepalived.dir.lib }}/{{ keepalived.script.name }}"
  ansible.builtin.template:
    src: "keepalived_check_k3s.sh.j2"
    dest: "{{ path }}"
    owner: "{{ keepalived.script.user }}"
    group: "{{ keepalived.script.group }}"
    mode: "u=rwx,g=rx,o=rx"

# You have to stat first because touch will ALWAYS change an existing file
- name: Check for the keepalived k3s script output file, {{ path }}
  vars:
    path: "{{ keepalived.dir.run }}/{{ keepalived.script.output }}"
  ansible.builtin.stat:
    path: "{{ path }}"
  register: check_output

# We have to create the output file so that the script has permissions
- name: Create keepalived k3s script output file, {{ path }}
  vars:
    path: "{{ keepalived.dir.run }}/{{ keepalived.script.output }}"
  ansible.builtin.file:
    path: "{{ path }}"
    state: touch
    owner: "{{ keepalived.script.user }}"
    group: "{{ keepalived.script.group }}"
    mode: "u=rw,g=r,o=r"
  when: not check_output.stat.exists

- name: Copy the keepalived kubeconfig, {{ str }}
  vars:
    src: "{{ keepalived.config.k3s }}"
    dest: "{{ keepalived.dir.lib }}/{{ keepalived.script.kubeconfig }}"
    str: "{{ src }} --> {{ dest }}"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ src }}"
    dest: "{{ dest }}"
    owner: "{{ keepalived.script.user }}"
    group: "{{ keepalived.script.group }}"
    mode: "u=r,g=,o="

#####################################
# Ensure non-local binding is enabled

- name: Ensure ipv4 nonlocal binding is enabled
  ansible.posix.sysctl:
    name: net.ipv4.ip_nonlocal_bind
    value: "1"
    state: present
    reload: true

- name: Ensure ipv6 nonlocal binding is enabled
  ansible.posix.sysctl:
    name: net.ipv6.ip_nonlocal_bind
    value: "1"
    state: present
    reload: true

###################
# Start the service

- name: Start keepalived service
  register: check_started
  ansible.builtin.service:
    name: keepalived
    enabled: true
    state: started

##############################################
# TODO: need tasks to label and annotate nodes

