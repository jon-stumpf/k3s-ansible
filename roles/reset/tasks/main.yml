---

#################################################################
# The tasks below mimic k3s-uninstall.sh from https://get.k3s.io.
# The comments are taken from this script to make it easier to
# track changes and maintain parity.
#

###################################
# Remove HA cluster method
# Note: not from https://get.k3s.io

- name: Remove HA cluster method, {{ k3s.cluster.method }}
  ansible.builtin.include_tasks: "ha-{{ k3s.cluster.method }}.yml"
  when:
    - ha_enabled
    - k3s.cluster.method != 'external'
    - inventory_hostname in groups['server']

#
# /usr/local/bin/k3s-killall.sh
#
- name: Shutdown k3s
  ansible.builtin.include_tasks: k3s-killall.yml

#
# systemctl disable k3s
# systemctl reset-failed k3s
# systemctl daemon-reload
#
- name: Disable services
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  failed_when: false
  loop: "{{ reference.service.names }}"

- name: Reload systemd
  ansible.builtin.systemd:
    daemon_reload: true

#
# rm -f /etc/systemd/system/k3s.service
# rm -f /etc/systemd/system/k3s.service.env
#
- name: Remove service files
  ansible.builtin.file:
    path: "{{ k3s.dir.systemd }}/{{ item }}"
    state: absent
  loop: "{{ reference.service.names | product(reference.service.extensions) | map('join', '.') }}"

#
# if (ls /etc/systemd/system/k3s*.service || ls /etc/init.d/k3s*) >/dev/null 2>&1; then
#     set +x; echo 'Additional k3s services installed, skipping uninstall of k3s'; set -x
#    exit
# fi
#
# Should this be done rather than focusing on a discrete list of services (reference.service.names)?

#
# for cmd in kubectl crictl ctr; do
#    if [ -L {{ k3s.dir.bin }}/$cmd ]; then
#        rm -f {{ k3s.dir.bin }}/$cmd
#    fi
# done
#
- name: Remove command files if they are symlink'd
  when: inventory_hostname in groups['server']
  block:
    - name: Stat command files
      register: stat_command_files
      ansible.builtin.stat:
        path: "{{ k3s.dir.bin }}/{{ item }}"
      loop:
        - kubectl
        - crictl
        - ctr

    - name: Remove command files
      ansible.builtin.file:
        path: "{{ item.stat.path }}"
        state: absent
      when: (item.stat.exists | default(false)) and (item.stat.islnk | default(false))
      loop: "{{ stat_command_files.results }}"
      loop_control:
        label: "{{ item.item }}"

# Remove files and directories
- name: Remove files and data
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/rancher/k3s
    - /run/k3s
    - /run/flannel
    - "{{ k3s.dir.data }}"
    - /var/lib/kubelet
    - "{{ k3s.dir.bin }}/k3s.sh"
    - "{{ k3s.dir.bin }}/k3s-killall.sh"    # From https://get.k3s.io
    - "{{ k3s.dir.bin }}/k3s-uninstall.sh"  # From https://get.k3s.io

- name: Remove ~/.kube directory
  ansible.builtin.file:
    path: "~{{ ansible_user }}/.kube"
    state: absent
  when: inventory_hostname in groups['server']

###################################
# Cleanup download equivalent tasks
- name: Cleanup downloaded files
  ansible.builtin.include_tasks: download.yml

