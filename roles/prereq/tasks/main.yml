---
- name: Set SELinux to disabled state
  selinux:
    state: disabled
  when: ansible_distribution in ['CentOS', 'RedHat', 'Red Hat Enterprise Linux']

- name: Enable IPv4 forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: true

- name: Enable IPv6 forwarding
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: true
  when: ansible_all_ipv6_addresses | length > 0

- name: Add br_netfilter to /etc/modules-load.d/
  ansible.builtin.copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_distribution in ['ArchLinux', 'CentOS', 'RedHat', 'Red Hat Enterprise Linux']

- name: Load br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  when: ansible_distribution in ['ArchLinux', 'CentOS', 'RedHat', 'Red Hat Enterprise Linux']

- name: Set bridge-nf-call-iptables (just to be sure)
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: true
  when: ansible_distribution in ['ArchLinux', 'CentOS', 'RedHat', 'Red Hat Enterprise Linux']
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Add {{ bin_dir }} to sudo secure_path
  ansible.builtin.lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:{{ bin_dir }}'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_distribution in ['CentOS', 'RedHat', 'Red Hat Enterprise Linux']

- name: Wait for automatic system updates
  shell: while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 10; done;
  when: ansible_distribution in ['Ubuntu']

- name: Install additional packages
  package:
    name: "{{ item }}"
    state: latest
    update_cache: true
  with_items: "{{ install_additional_packages | default([]) }}"
